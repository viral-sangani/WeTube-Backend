# Generated by Django 3.0.7 on 2020-06-25 15:27

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import website.managers
import website.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('firstName', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('lastName', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('dateJoined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('isActive', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=True, verbose_name='staff status')),
                ('hasChannel', models.BooleanField(default=False, verbose_name='hasChannel')),
                ('likedVideo', django.contrib.postgres.fields.jsonb.JSONField(default=website.models.default)),
                ('watchedVideo', django.contrib.postgres.fields.jsonb.JSONField(default=website.models.default)),
                ('subscribedChannel', django.contrib.postgres.fields.jsonb.JSONField(default=website.models.default)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
            },
            managers=[
                ('objects', website.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channelSlug', models.CharField(max_length=100, verbose_name='Channel Slug')),
                ('channelName', models.CharField(max_length=100, verbose_name='Channel Name')),
                ('channelImage', models.ImageField(null=True, upload_to='image/channel', verbose_name='Channel Image')),
                ('channelCreateTime', models.DateTimeField(auto_now_add=True, verbose_name='Channel Create Time')),
                ('channelUpdateTime', models.DateTimeField(auto_now=True, verbose_name='Channel Update Time')),
                ('channelAbout', models.TextField(verbose_name='Channel About')),
                ('channelTotalSub', models.IntegerField(default=0, verbose_name='Channel Total Subs')),
                ('channelCreatedBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'channel',
                'verbose_name_plural': 'channels',
                'db_table': 'channel',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videoName', models.CharField(max_length=200, verbose_name='Video Name')),
                ('videoSlug', models.CharField(max_length=200, verbose_name='Video Slug')),
                ('videoLink', models.URLField(max_length=2000, null=True, verbose_name='Video Link')),
                ('videoThumbnail', models.URLField(max_length=2000, null=True, verbose_name='Video Thumbnail')),
                ('videoDescription', models.TextField(null=True, verbose_name='Video Description')),
                ('videoUploadTime', models.DateTimeField(auto_now_add=True, verbose_name='Video Upload Time')),
                ('videoTotalViews', models.IntegerField(default=0, verbose_name='Video Total Views')),
                ('videoTotalLikes', models.IntegerField(default=0, verbose_name='Video Total Likes')),
                ('videoTotalDislikes', models.IntegerField(default=0, verbose_name='Video Total Dislikes')),
                ('videoLikedBy', django.contrib.postgres.fields.jsonb.JSONField(default=website.models.default)),
                ('videoDislikedBy', django.contrib.postgres.fields.jsonb.JSONField(default=website.models.default)),
                ('videoComment', django.contrib.postgres.fields.jsonb.JSONField(default=website.models.default)),
                ('algolia_id', models.CharField(max_length=50, verbose_name='Algolia ID')),
                ('videoChannel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Channel', verbose_name='Channel Name')),
            ],
            options={
                'verbose_name': 'video',
                'verbose_name_plural': 'videos',
                'db_table': 'video',
            },
        ),
    ]
